'use client'
import styles from "./course.module.css";
import { getFirestore, collection, getDocs } from "firebase/firestore"; 
import app from "@/app/_firebase/Config";
import { useEffect, useState } from "react";

export default function Course() {
  const db = getFirestore(app);
  const [schedule, setSchedule] = useState([]); // 課表資料

  // 初始載入課表資料
  useEffect(() => {
    async function fetchSchedule() {
      const querySnapshot = await getDocs(collection(db, "系所課程"));
      const scheduleData = [];

      querySnapshot.forEach((doc) => {
        const data = doc.data();
        const { 開課時間, ...rest } = data;

        // 解析開課時間，例如 "六(Sat) D2-D4"
        const [day, timeRange] = 開課時間.split(" ");
        const dayIndex = ["一", "二", "三", "四", "五", "六"].indexOf(day[0]) + 1; // 將星期轉為數字
        const [startPeriod, endPeriod] = timeRange.replace(/[^\d-]/g, "").split("-").map(Number);

        // 將資料展開到對應的節次和星期
        for (let i = startPeriod; i <= endPeriod; i++) {
          if (!scheduleData[i]) scheduleData[i] = {};
          scheduleData[i][dayIndex] = { ...rest, 開始節次: startPeriod, 結束節次: endPeriod };
        }
      });

      console.log(scheduleData); // 檢查資料是否正確
      setSchedule(scheduleData);
    }
    fetchSchedule();
  }, []);

  return (
    <>
      <header>
        <h1>輔大資管碩士新生資訊系統</h1>
        <p>整合修業規則、課程資訊與師資介紹</p>
      </header>
      <div className="container">
        <div className="section">
          <div className={styles.main}>
            <h2>課表</h2>
            <table className="schedule-table" border="1" style={{ width: "100%", textAlign: "center" }}>
              <thead>
                <tr>
                  <th>節次</th>
                  {["星期一", "星期二", "星期三", "星期四", "星期五", "星期六"].map((day, index) => (
                    <th key={index}>{day}</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {["1", "2", "3", "4", "午休", "5", "6", "7", "8-9", "E1-E3"].map((period, rowIndex) => (
                  <tr key={rowIndex}>
                    <td>{period}</td>
                    {[1, 2, 3, 4, 5, 6].map((day, colIndex) => {
                      // 根據節次和星期獲取資料
                      const rowData = schedule[rowIndex + 1]?.[day];

                      // 如果是開始節次，渲染資訊並設置 rowspan
                      if (rowData && rowData.開始節次 === rowIndex + 1) {
                        return (
                          <td key={colIndex} rowSpan={rowData.結束節次 - rowData.開始節次 + 1}>
                            <div>課程代號：{rowData.課程代號}</div>
                            <div>課程名稱：{rowData.課程名稱}</div>
                            <div>教師：{rowData.教師}</div>
                            <div>地點：{rowData.地點}</div>
                          </td>
                        );
                      }

                      // 如果不是開始節次，返回 null（跳過渲染）
                      if (rowData && rowData.開始節次 < rowIndex + 1 && rowIndex + 1 <= rowData.結束節次) {
                        return null;
                      }

                      // 如果沒有資料，顯示 "無"
                      return <td key={colIndex}>無</td>;
                    })}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </>
  );
}